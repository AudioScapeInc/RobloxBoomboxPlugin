"use strict";(self.webpackChunkaudioscape=self.webpackChunkaudioscape||[]).push([[438],{5313:(e,o,s)=>{s.r(o),s.d(o,{assets:()=>t,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>r,toc:()=>d});var l=s(4848),n=s(8453);const a={sidebar_position:3},i="AudioScape Boombox Plugin Advanced Settings",r={id:"tutorial-basics/AdvancedSettings",title:"AudioScape Boombox Plugin Advanced Settings",description:"Overview",source:"@site/docs/tutorial-basics/AdvancedSettings.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/AdvancedSettings",permalink:"/RobloxBoomboxPlugin/docs/tutorial-basics/AdvancedSettings",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Production Configuration",permalink:"/RobloxBoomboxPlugin/docs/tutorial-basics/secret-setup"}},t={},d=[{value:"Overview",id:"overview",level:2},{value:"Properties",id:"properties",level:2},{value:"Methods",id:"methods",level:2},{value:"1. <code>BoomBox:RestructureFromRobloxMetaData(Songs: { RobloxAudioMetadata })</code>",id:"1-boomboxrestructurefromrobloxmetadatasongs--robloxaudiometadata-",level:3},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Example Usage:",id:"example-usage",level:4},{value:"2. <code>BoomBox:PushToQueue(Info: { Players: { Player }?, AssetIDs: { number }, PlayNow: boolean, ClearQueue: boolean, Fade: number? })</code>",id:"2-boomboxpushtoqueueinfo--players--player--assetids--number--playnow-boolean-clearqueue-boolean-fade-number-",level:3},{value:"Parameters:",id:"parameters-1",level:4},{value:"Example Usage:",id:"example-usage-1",level:4},{value:"3. <code>BoomBox:AdjustVolume(Info: { Players: { Player }?, Volume: number })</code>",id:"3-boomboxadjustvolumeinfo--players--player--volume-number-",level:3},{value:"Parameters:",id:"parameters-2",level:4},{value:"Example Usage:",id:"example-usage-2",level:4},{value:"4. <code>BoomBox:AdjustMaxVolume(Info: { Players: { Player }?, MaxVolume: number })</code>",id:"4-boomboxadjustmaxvolumeinfo--players--player--maxvolume-number-",level:3},{value:"Parameters:",id:"parameters-3",level:4},{value:"Example Usage:",id:"example-usage-3",level:4}];function u(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.header,{children:(0,l.jsx)(o.h1,{id:"audioscape-boombox-plugin-advanced-settings",children:"AudioScape Boombox Plugin Advanced Settings"})}),"\n",(0,l.jsx)(o.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(o.p,{children:"The Audioscape Boombox Plugin allows various developer customizations for setting the location of the player in the game, whether it starts in a minimized state, whether it autoplays music, volume controls, and accent colors."}),"\n",(0,l.jsxs)(o.p,{children:["The ",(0,l.jsx)(o.code,{children:"BoomBox"})," module is a server-side module for handling boombox functionality within a Roblox game. It primarily manages audio metadata, restructures it, and interacts with players by pushing songs to their play queue. This module is designed to run only on the server."]}),"\n",(0,l.jsx)(o.h2,{id:"properties",children:"Properties"}),"\n",(0,l.jsx)(o.p,{children:"The BoomBox module uses the following properties, which can be configured:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"DraggingEnabled"}),": Boolean, default is false. Determines if the boombox UI can be dragged."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Autoplay"}),": Boolean, default is false. Determines if audio should start playing automatically."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Minimized"}),": Boolean, default is false. Determines if the boombox UI starts in a minimized state."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"MaxVolume"}),": Number, default is 1. Sets the maximum volume level for the boombox."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"DefaultPosition"}),": Vector2, default is (1, 0.5). Sets the default position of the boombox UI to the Right Side of the Screen and centered vertically."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"DefaultAccentColor"}),": Color3, default is (1, 1, 1) (white). Sets the default accent color for the boombox UI."]}),"\n"]}),"\n",(0,l.jsx)(o.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsxs)(o.h3,{id:"1-boomboxrestructurefromrobloxmetadatasongs--robloxaudiometadata-",children:["1. ",(0,l.jsx)(o.code,{children:"BoomBox:RestructureFromRobloxMetaData(Songs: { RobloxAudioMetadata })"})]}),"\n",(0,l.jsx)(o.p,{children:"This method restructures the audio metadata obtained from Roblox into a custom format suitable for the boombox system."}),"\n",(0,l.jsx)(o.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Songs"}),": A table containing one or more ",(0,l.jsx)(o.code,{children:"RobloxAudioMetadata"})," entries, each representing a song's metadata."]}),"\n"]}),"\n",(0,l.jsx)(o.h4,{id:"returns",children:"Returns:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsx)(o.li,{children:"A JSON-encoded string of the restructured song metadata."}),"\n"]}),"\n",(0,l.jsx)(o.h4,{id:"example-usage",children:"Example Usage:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-lua",children:"local restructuredData = BoomBox:RestructureFromRobloxMetaData(SongMetadata)\n"})}),"\n",(0,l.jsxs)(o.h3,{id:"2-boomboxpushtoqueueinfo--players--player--assetids--number--playnow-boolean-clearqueue-boolean-fade-number-",children:["2. ",(0,l.jsx)(o.code,{children:"BoomBox:PushToQueue(Info: { Players: { Player }?, AssetIDs: { number }, PlayNow: boolean, ClearQueue: boolean, Fade: number? })"})]}),"\n",(0,l.jsx)(o.p,{children:"This method pushes songs to the play queue of specified players. It can either play the song immediately, clear the existing queue, or both, depending on the provided options."}),"\n",(0,l.jsx)(o.h4,{id:"parameters-1",children:"Parameters:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(o.code,{children:"Player"})," instances to whom the songs should be pushed. If not provided, all players in the game will be targeted."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"AssetIDs"}),": A list of asset IDs representing the songs to be queued."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"PlayNow"}),": A boolean indicating whether the songs should play immediately."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"ClearQueue"}),": A boolean indicating whether the existing queue should be cleared before adding the new songs."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Fade"}),": (Optional) A number indicating the duration of crossfades between songs."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(o.h4,{id:"example-usage-1",children:"Example Usage:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-lua",children:"BoomBox:PushToQueue({\n    Players = { Player },\n    AssetIDs = { 123456789 },\n    PlayNow = true,\n    ClearQueue = true,\n    Fade = 2\n})\n"})}),"\n",(0,l.jsxs)(o.h3,{id:"3-boomboxadjustvolumeinfo--players--player--volume-number-",children:["3. ",(0,l.jsx)(o.code,{children:"BoomBox:AdjustVolume(Info: { Players: { Player }?, Volume: number })"})]}),"\n",(0,l.jsx)(o.p,{children:"This method adjusts the volume for specific players or all players in the game."}),"\n",(0,l.jsx)(o.h4,{id:"parameters-2",children:"Parameters:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(o.code,{children:"Player"})," instances for whom the volume should be adjusted. If not provided, the volume will be adjusted for all players."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Volume"}),": The volume level to set (must be a number)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(o.h4,{id:"example-usage-2",children:"Example Usage:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-lua",children:"BoomBox:AdjustVolume({\n    Players = { Player },\n    Volume = 0.5\n})\n"})}),"\n",(0,l.jsxs)(o.h3,{id:"4-boomboxadjustmaxvolumeinfo--players--player--maxvolume-number-",children:["4. ",(0,l.jsx)(o.code,{children:"BoomBox:AdjustMaxVolume(Info: { Players: { Player }?, MaxVolume: number })"})]}),"\n",(0,l.jsx)(o.p,{children:"This method adjusts the maximum volume limit for specific players or all players in the game."}),"\n",(0,l.jsx)(o.h4,{id:"parameters-3",children:"Parameters:"}),"\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(o.ul,{children:["\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(o.code,{children:"Player"})," instances for whom the maximum volume should be adjusted. If not provided, the maximum volume will be adjusted for all players."]}),"\n",(0,l.jsxs)(o.li,{children:[(0,l.jsx)(o.code,{children:"MaxVolume"}),": The maximum volume level to set (must be a number)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(o.h4,{id:"example-usage-3",children:"Example Usage:"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{className:"language-lua",children:"BoomBox:AdjustMaxVolume({\n    Players = { Player },\n    MaxVolume = 1\n})\n"})})]})}function c(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,l.jsx)(o,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,o,s)=>{s.d(o,{R:()=>i,x:()=>r});var l=s(6540);const n={},a=l.createContext(n);function i(e){const o=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),l.createElement(a.Provider,{value:o},e.children)}}}]);
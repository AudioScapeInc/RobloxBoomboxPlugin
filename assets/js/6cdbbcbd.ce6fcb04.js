"use strict";(self.webpackChunkaudioscape=self.webpackChunkaudioscape||[]).push([[175],{909:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>t,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var l=o(4848),n=o(8453);const r={sidebar_position:4},a="BoomBox Server",i={id:"usage/boombox-server",title:"BoomBox Server",description:"Overview",source:"@site/docs/usage/boombox-server.md",sourceDirName:"usage",slug:"/usage/boombox-server",permalink:"/RobloxBoomboxPlugin/docs/usage/boombox-server",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"BoomBox Client",permalink:"/RobloxBoomboxPlugin/docs/usage/boombox-client"}},t={},d=[{value:"Overview",id:"overview",level:2},{value:"Requiring",id:"requiring",level:2},{value:"Advanced Settings",id:"advanced-settings",level:2},{value:"Methods",id:"methods",level:2},{value:"RestructureFromRobloxMetaData",id:"restructurefromrobloxmetadata",level:2},{value:"Parameters:",id:"parameters",level:4},{value:"Returns:",id:"returns",level:4},{value:"Example Usage:",id:"example-usage",level:4},{value:"PushToQueue",id:"pushtoqueue",level:2},{value:"Parameters:",id:"parameters-1",level:4},{value:"Example Usage:",id:"example-usage-1",level:4},{value:"AdjustVolume",id:"adjustvolume",level:2},{value:"Parameters:",id:"parameters-2",level:4},{value:"Example Usage:",id:"example-usage-2",level:4},{value:"AdjustMaxVolume",id:"adjustmaxvolume",level:2},{value:"Parameters:",id:"parameters-3",level:4},{value:"Example Usage:",id:"example-usage-3",level:4}];function u(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(s.header,{children:(0,l.jsx)(s.h1,{id:"boombox-server",children:"BoomBox Server"})}),"\n",(0,l.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,l.jsx)(s.p,{children:"The Audioscape Boombox Plugin allows various developer customizations for setting the location of the player in the game, whether it starts in a minimized state, whether it autoplays music, volume controls, and accent colors."}),"\n",(0,l.jsxs)(s.p,{children:["The ",(0,l.jsx)(s.code,{children:"BoomBox"})," module is a server-side module for handling boombox functionality within a Roblox game. It primarily manages audio metadata, restructures it, and interacts with players by pushing songs to their play queue. This module is designed to run only on the server."]}),"\n",(0,l.jsx)(s.h2,{id:"requiring",children:"Requiring"}),"\n",(0,l.jsx)(s.p,{children:"It is necessary to require the BoomBoxClient module from the LocalPlayer's PlayerGui, as it is a singleton module."}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-lua",children:'local BoomBoxServer = require(ServerScriptService:WaitForChild("AudioscapeBoomBox"))\n'})}),"\n",(0,l.jsx)(s.h2,{id:"advanced-settings",children:"Advanced Settings"}),"\n",(0,l.jsx)(s.p,{children:"The BoomBox module uses the following properties, which can be configured:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"DraggingEnabled"}),": Boolean, default is false. Determines if the boombox UI can be dragged."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Autoplay"}),": Boolean, default is false. Determines if audio should start playing automatically."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Minimized"}),": Boolean, default is false. Determines if the boombox UI starts in a minimized state."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"MaxVolume"}),": Number, default is 1. Sets the maximum volume level for the boombox."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"DefaultPosition"}),": Vector2, default is (1, 0.5). Sets the default position of the boombox UI to the Right Side of the Screen and centered vertically."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"DefaultAccentColor"}),": Color3, default is (1, 1, 1) (white). Sets the default accent color for the boombox UI."]}),"\n"]}),"\n",(0,l.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,l.jsx)(s.h2,{id:"restructurefromrobloxmetadata",children:"RestructureFromRobloxMetaData"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"BoomBox:RestructureFromRobloxMetaData(Songs: { RobloxAudioMetadata })"}),"\nThis method restructures the audio metadata obtained from Roblox into a custom format suitable for the boombox system."]}),"\n",(0,l.jsx)(s.h4,{id:"parameters",children:"Parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Songs"}),": A table containing one or more ",(0,l.jsx)(s.code,{children:"RobloxAudioMetadata"})," entries, each representing a song's metadata."]}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"returns",children:"Returns:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsx)(s.li,{children:"A JSON-encoded string of the restructured song metadata."}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"example-usage",children:"Example Usage:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-lua",children:"local restructuredData = BoomBox:RestructureFromRobloxMetaData(SongMetadata)\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"pushtoqueue",children:"PushToQueue"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"BoomBox:PushToQueue(Info: { Players: { Player }?, AssetIDs: { number }, PlayNow: boolean, ClearQueue: boolean, Fade: number? })"}),"\nThis method pushes songs to the play queue of specified players. It can either play the song immediately, clear the existing queue, or both, depending on the provided options."]}),"\n",(0,l.jsx)(s.h4,{id:"parameters-1",children:"Parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(s.code,{children:"Player"})," instances to whom the songs should be pushed. If not provided, all players in the game will be targeted."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"AssetIDs"}),": A list of asset IDs representing the songs to be queued."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"PlayNow"}),": A boolean indicating whether the songs should play immediately."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"ClearQueue"}),": A boolean indicating whether the existing queue should be cleared before adding the new songs."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Fade"}),": (Optional) A number indicating the duration of crossfades between songs."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"example-usage-1",children:"Example Usage:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-lua",children:"BoomBox:PushToQueue({\n    Players = { Player },\n    AssetIDs = { 123456789 },\n    PlayNow = true,\n    ClearQueue = true,\n    Fade = 2\n})\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"adjustvolume",children:"AdjustVolume"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"BoomBox:AdjustVolume(Info: { Players: { Player }?, Volume: number })"}),"\nThis method adjusts the volume for specific players or all players in the game."]}),"\n",(0,l.jsx)(s.h4,{id:"parameters-2",children:"Parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(s.code,{children:"Player"})," instances for whom the volume should be adjusted. If not provided, the volume will be adjusted for all players."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Volume"}),": The volume level to set (must be a number)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"example-usage-2",children:"Example Usage:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-lua",children:"BoomBox:AdjustVolume({\n    Players = { Player },\n    Volume = 0.5\n})\n"})}),"\n",(0,l.jsx)(s.hr,{}),"\n",(0,l.jsx)(s.h2,{id:"adjustmaxvolume",children:"AdjustMaxVolume"}),"\n",(0,l.jsxs)(s.p,{children:[(0,l.jsx)(s.code,{children:"BoomBox:AdjustMaxVolume(Info: { Players: { Player }?, MaxVolume: number })"}),"\nThis method adjusts the maximum volume limit for specific players or all players in the game."]}),"\n",(0,l.jsx)(s.h4,{id:"parameters-3",children:"Parameters:"}),"\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Info"}),": A table containing:","\n",(0,l.jsxs)(s.ul,{children:["\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"Players"}),": (Optional) A list of ",(0,l.jsx)(s.code,{children:"Player"})," instances for whom the maximum volume should be adjusted. If not provided, the maximum volume will be adjusted for all players."]}),"\n",(0,l.jsxs)(s.li,{children:[(0,l.jsx)(s.code,{children:"MaxVolume"}),": The maximum volume level to set (must be a number)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(s.h4,{id:"example-usage-3",children:"Example Usage:"}),"\n",(0,l.jsx)(s.pre,{children:(0,l.jsx)(s.code,{className:"language-lua",children:"BoomBox:AdjustMaxVolume({\n    Players = { Player },\n    MaxVolume = 1\n})\n"})})]})}function c(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,l.jsx)(s,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>a,x:()=>i});var l=o(6540);const n={},r=l.createContext(n);function a(e){const s=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),l.createElement(r.Provider,{value:s},e.children)}}}]);